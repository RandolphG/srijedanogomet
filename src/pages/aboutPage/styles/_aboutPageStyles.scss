// ------------- MIXINS ------------- //
@mixin transition($time, $property: all, $easing: ease-in) {
  transition: $property $time $easing;
}

// ------------- VARIABLES ------------- //
$parallax-offset: 40vh;
$content-offset: 40vh;
$transition-speed: 1.2s;
$slide-number: 5;


.background {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
  overflow: hidden;
  will-change: transform;
  backface-visibility: hidden;
  height: 100vh + $parallax-offset;
  position: fixed;
  width: 100%;
  transform: translateY($parallax-offset);
  @include transition($transition-speed, all, cubic-bezier(0.22, 0.44, 0, 1));

  &:before {
    overflow: hidden;
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, .3);
  }

  &:first-child {
    background-image: url(../../../resources/bgd1.jpg);
    transform: translateY(-$parallax-offset / 2);

    .content-wrapper {
      transform: translateY($parallax-offset /2);
    }
  }

  &:nth-child(2) {
    background-image: url(../../../resources/images/_image_15.jpeg);
  }

  &:nth-child(3) {
    background-image: url(../../../resources/images/_image03.jpeg);
  }

  &:nth-child(4) {
    background-image: url(../../../resources/images/_image04.jpeg);
  }

  &:nth-child(5) {
    background-image: url(../../../resources/images/_image08.jpeg);
  }
}

/* Set stacking context of slides */
@for $i from 1 to ($slide-number + 1) {
  .background:nth-child(#{$i}) {
    z-index: ($slide-number + 1) - $i;
  }
}

.content {
  &-wrapper {
    height: 100vh;
    display: flex;
    justify-content: center;
    text-align: center;
    flex-flow: column nowrap;
    color: #fff;
    font-family: Montserrat;
    text-transform: uppercase;
    transform: translateY($content-offset);
    will-change: transform;
    backface-visibility: hidden;
    @include transition($transition-speed + .5, all, cubic-bezier(0.22, 0.44, 0, 1));
  }

  &-title {
    font-size: 8vh;
    line-height: 1.4;
  }
}

// ------------- SET TRANSFORM VALUES ------------- //

.background.up-scroll {
  transform: translate3d(0, -$parallax-offset / 2, 0);

  .content-wrapper {
    transform: translateY($parallax-offset / 2);
  }

  + .background {
    transform: translate3d(0, $parallax-offset, 0);

    .content-wrapper {
      transform: translateY($parallax-offset);
    }
  }
}

.background.down-scroll {
  transform: translate3d(0, -(100vh + $parallax-offset), 0);

  .content-wrapper {
    transform: translateY($content-offset);
  }

  + .background:not(.down-scroll) {
    transform: translate3d(0, -$parallax-offset / 2, 0);

    .content-wrapper {
      transform: translateY($parallax-offset / 2);
    }
  }
}


.content-subtitle {
  font-size: 2rem;
}

.content-mission-statement {
  font-size: 2rem;
  padding: 2rem 8rem 2rem 8rem;;
  line-height: 1.2;
}
